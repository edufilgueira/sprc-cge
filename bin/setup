#!/usr/bin/env ruby
require 'pathname'
require 'fileutils'
include FileUtils

# path to your application root.
APP_ROOT = Pathname.new File.expand_path('../../', __FILE__)

def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

chdir APP_ROOT do
  # This script is a starting point to setup your application.
  # Add necessary setup steps to this file.

  puts '== Installing dependencies =='
  system! 'gem install bundler --conservative'
  system('bundle check') || system!('bundle install')

  puts "\n== Copying sample files =="
  %i[application database secrets sidekiq].each do |basename|
    unless File.exist?("config/#{basename}.yml")
      cp "config/#{basename}.yml.sample", "config/#{basename}.yml"
    end
  end

  puts "\n== Preparing database =="
  # Para evitar especificidades de versões de Postgres, optamos por rodar todas as migrações no setup
  # Caso queiramos usar `db:setup` - que faz `db:schema:load` - precisamos padronizar a versão do
  # Postgres em ambiente de desenvolvimento e ativar a configuração
  # `config.active_record.schema_format = :sql` em `config/environment/application.rb`
  # system! 'bin/rails db:setup'
  system! 'bin/rails db:create db:migrate'

  puts "\n== Removing old logs and tempfiles =="
  system! 'bin/rails log:clear tmp:clear'

  puts "\n== Restarting application server =="
  system! 'bin/rails restart'
end
